/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */  



class Solution {
public:
    int maxDepth(TreeNode* root) {

        // DFS 
        // if(!root)
        // {
        //     return 0;
        // }
        //  return max(maxDepth(root->left),maxDepth(root->right))+1;   

        // BFS 
        if(!root)
        {
            return 0;
        } 
        int res=0;
        queue<TreeNode*>q;
        q.push(root);
        while(!q.empty())
        {
            res++;
            int sz=q.size();
            for(int i=0;i<sz;i++)
            {
                TreeNode* temp = q.front();
                q.pop();
                if(temp->left)
                {
                    q.push(temp->left);
                }
                   if(temp->right)
                {
                    q.push(temp->right);
                }
            }
        }
        return res;
    }     
        
};
