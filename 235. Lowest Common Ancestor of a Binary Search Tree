/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */

// class Solution {
// public:
//     TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
//          if(root==NULL || root==p || root==q)
//         {
//             return root;
//         }
//         TreeNode* left = lowestCommonAncestor(root->left, p, q);
//         TreeNode* right = lowestCommonAncestor(root->right, p, q);
//         if(left==NULL)
//         {
//             return right;
//         }
//         else if(right==NULL)
//         {
//             return left;
//         }
//         else{
//             return root;
//         }
//     }
// };


class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
       int small = min(p->val,q->val);
        int large = max(p->val,q->val);
        while(root!=nullptr)
        {
            if(root->val>large)
            {
                root = root->left;
            }
            else if (root->val<small)
            {
                root = root->right;
            }
            else{
                return root;
            }
        }
        return nullptr;
    }
};
