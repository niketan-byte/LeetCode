class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
    sort(nums.begin(),nums.end());
        if(nums[0]>0)
        {
            return {};
        }
        if(nums.size()<3)
        {
            return {};
        }
        vector<vector<int>>ans;
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]>0)   // fixed number can't be positive
            {
                break;
            }
            if(i>0 && nums[i]==nums[i-1])   // to remove duplicate
            {
                continue;
            }
            int j=i+1;
            int k=nums.size()-1;
            int sum=0;
            while(j<k)
            {
                sum = nums[i]+nums[j]+nums[k];
                if(sum>0)
                {
                    k--;
                }
                else if(sum<0)
                {
                    j++;
                }
                else{
                    ans.push_back({nums[i],nums[j],nums[k]});
                    int last_j = nums[j];
                    int last_k = nums[k];
                    while(j<k && nums[j]==last_j)
                    {
                        j++;
                    }
                    while(j<k && nums[k]==last_k)
                    {
                        k--;
                    }
                }
            }
        }
        return ans;
    }
};


class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int n = nums.size();
        sort(nums.begin(),nums.end());
        vector<vector<int>>ans;
        for(int i=0;i<n-2;i++)
        {
            int st=i+1;
            int end=n-1;
            while(st<end)
            {
                if(nums[i]+nums[st]+nums[end]<0)
                {
                    st++;
                }
                else if(nums[i]+nums[st]+nums[end]>0){
                    end--;
                }
                else{
                    ans.push_back({nums[i],nums[st],nums[end]});
                    st++;
                    end--;
                    while(st<end && nums[st]==nums[st-1])
                    {
                        st++;
                    }
                
                }
            }
            while(i<n-2 && nums[i]==nums[i+1])
            {
                i++;
            }
        }
        return ans;
    }
};
