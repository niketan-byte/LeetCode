/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
      vector<int>low,high;
      ListNode* temp = head;
      while(temp)
      {
          if(temp->val<x)
          {
              low.push_back(temp->val);
          }
          else{
              high.push_back(temp->val);
          }
          temp=temp->next;
      }
      ListNode* ans = new ListNode(0);
      ListNode* temp1 = ans;
      int i=0;
   
      while(i<low.size())
      {
          ListNode* te = new ListNode(low[i]);
          temp1->next = te;
          temp1 = temp1->next;
        i++;
      }
      int j=0;
      while(j<high.size())
     {
     ListNode* te = new ListNode(high[j]);
      temp1 ->next = te;
     temp1 = temp1->next;
    j++;
     }
     return ans->next;

    }
};
