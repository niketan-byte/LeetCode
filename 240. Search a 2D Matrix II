class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int m = matrix.size();
        int n = matrix[0].size();  
        int ulr = 0;
        int ulc = n-1;
        while(ulr<m  && ulc>=0 )
        {
            if(matrix[ulr][ulc]==target)
            {
                return true;
            }
            else{
                matrix[ulr][ulc] > target ? ulc-- : ulr++;
            }
        }
            return false; 
    }
};



// class Solution {
// public:
//     bool search(vector<int> &v,int target)
//     {
//         int l=0;
//         int r = v.size()-1;
//          while(l <= r)
//          {
//              int mid = l + (r-l)/2;
             
//          if(v[mid]==target)
//           {
//                  return true;
//          }
//          if (v[mid] < target){
// 		   l = mid + 1;}
// 	else{
// 		r = mid - 1;}
//     }
    
//           return false;
//     }
//     bool searchMatrix(vector<vector<int>>& matrix, int target) {
//      int m = matrix.size();
//      int n = matrix[0].size();  
//         for(int i=0;i<m;i++)
//         {
//             if(search(matrix[i],target))
//             {
//                 return true;
//             }
//         }
//         return false;
//     }
// };
