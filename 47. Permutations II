class Solution {
public:
    void solve(vector<int>& nums, vector<vector<int>>& ans, int idx)
    {
        if(idx>=nums.size())
        {
            ans.push_back(nums);
            return;
        }

        unordered_set<int> set;
        for(int i=idx;i<nums.size();i++)
        {
            // if(i>idx && nums[i]==nums[i-1])
            // {
            //     continue;
            // }
            if (set.count(nums[i]) > 0)
                continue;
            set.insert(nums[i]);
            swap(nums[idx],nums[i]);
            solve(nums,ans,idx+1);
            swap(nums[idx],nums[i]);
        }
    }
    vector<vector<int>> permuteUnique(vector<int>& nums) {
        vector<vector<int>>ans;
        int idx=0;
        sort(nums.begin(),nums.end());
        solve(nums,ans,idx);
        return ans;
    }
};
