class Solution {
public:
   bool eatall(vector<int>&piles, int h, int speed)
   {
        int curr=0;
        for(double num:piles){
            double hours=num/speed;
            curr+=ceil(hours);
        }
        return curr<=h;
   }
    int minEatingSpeed(vector<int>& piles, int h) {
        int n = piles.size();
        int minspeed=1;
        int maxspeed=*max_element(piles.begin(),piles.end());

        while(maxspeed>minspeed)
        {
            int mid = (maxspeed+minspeed)/2;
            if(eatall(piles,h,mid))
            {
                maxspeed = mid;
            }
            else{
                minspeed = mid+1;
            }
        }
        return minspeed;
    }
};
