// class Solution {
// public:
//     void reverseString(vector<char>& s) {
//         int i=0,j=s.size()-1;
//         while(i<=j)
//         {
//             char c = s[i];
//             s[i]=s[j];
//             s[j]=c;
//             i++;
//             j--;
//         }
//     }
// };


class Solution {
public:
    void reverseString(vector<char>& s) {
        //keep a pointer to track left end of string
        int i=0;
        //keep a pointer to track right end 
        int j=s.size()-1;
        while(i<j)
        {
            swap(s[i],s[j]);
            i++;
            j--;
        }
    }
};


class Solution {
public:
   void RRstring(vector<char>&s, int st,int end)
   {
       if(st>end)
       {
           return;
       }
       swap(s[st],s[end]);
       RRstring(s,st+1,end-1);
   }
    void reverseString(vector<char>& s) {
        RRstring(s,0,s.size()-1);
    }
};
