/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    // recursive
    // int sumNumbers(TreeNode* root,int sum=0) {
    //     if(!root)
    //     {
    //         return 0;
    //     }
    //     sum = sum*10 + root->val;
    //     if(!root->left && !root->right)
    //     {
    //         return sum;
    //     }
    //     return sumNumbers(root->left,sum)+ sumNumbers(root->right,sum);
    // }

    // iterative 
    int sumNumbers(TreeNode* root) {
      stack<pair<TreeNode*,int>>s;
      s.push({root,0});
      int sum = 0;
      while(!s.empty())
      {
          auto [root,curr] = s.top();
          s.pop();
          curr = curr*10 + root->val;
          if(!root->left && !root->right)
          {
             sum += curr;
          }
          if(root->right)
          {
              s.push({root->right,curr});
          }
          if(root->left)
          {
              s.push({root->left,curr});
          }
      }
        return sum;
    }
};
