// class Solution {
// public:
//     int missingNumber(vector<int>& nums) {
//         int sum=0;
//         sum=accumulate(nums.begin(), nums.end(), 0);
//         int n=nums.size();
//         int ans = ((n*(n+1))/2) - sum;
//         return ans;
//     }
// };

 class Solution {
 public:
int missingNumber(vector<int>& nums) {
    long n = nums.size();
    return n * (n+1) / 2 - accumulate(begin(nums), end(nums), 0);
}
 };


class Solution{
  public:
    int missingNumber(vector<int>& nums)
    {
        sort(nums.begin(),nums.end());
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]!=i && nums[i]!=0)
            {
                return i;
            }
            
        }
        return nums.size();
    }
};
