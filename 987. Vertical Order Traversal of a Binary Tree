/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void helper(TreeNode* root,int distance,int level, map<int,map<int,multiset<int>>>&mp)
    {
        if(root==NULL)
        {
            return;
        }
    
        mp[distance][level].insert(root->val);
        
        helper(root->left,distance-1,level+1,mp);
        helper(root->right,distance+1,level+1,mp);
    }
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        vector<vector<int>> ans;
        map<int,map<int,multiset<int>>>mp;
        int distance=0;
        int level=1;
        helper(root,distance,level,mp);
    
        for(auto i:mp)
        {  
            vector<int>res;
            for(auto j:i.second)
            {
                res.insert(res.end(),j.second.begin(),j.second.end());
            }
            ans.push_back(res);
        }
        return ans;
    }
};
