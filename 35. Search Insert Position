class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
       int n= nums.size();
       int i=0;
       int j = n-1; 
       while(i<=j)
       {
           int mid = i+(j-i)/2;
          
           if(nums[mid]>=target)
           {
              j=mid-1;
           }
           else{
                 i=mid+1;   
           }
       }
     return i;
    }
};

// start with i/l = 0
// end with j/r = n-1;
// while() me equal wali condition i<=j or l<=r
// mid me always use l+(r-l)/2; for avoiding overflow condition
// return mid if sidha sidha question  ho
// if ulta question ho to not return the mid direct while ke baad return l
// if(>) me greater than me j/r = mid-1;
// < less than me i/l = mid+1;
