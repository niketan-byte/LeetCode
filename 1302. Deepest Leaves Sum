/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int ans=0;
    int depth=0;
    
    int maxdepth(TreeNode* root)
    {
        if(root==NULL)
        {
            return 0;
        }
       
    return max(1+maxdepth(root->left),1+maxdepth(root->right));
    }
    
    int helper(TreeNode* root,int d)
    {
        if(!root)
        {
            return 0;
        }
        if(d==depth-1)
        {
            return root->val;
        }
        return helper(root->left,d+1)+helper(root->right,d+1);
    }
    
    int deepestLeavesSum(TreeNode* root) {
        
        depth = maxdepth(root);
         ans = helper(root,0);
   
  
        return ans;
    }
};
