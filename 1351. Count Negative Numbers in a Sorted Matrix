class Solution {
public:
    int countNegatives(vector<vector<int>>& grid) {
        int cnt=0;
        int m=grid.size();
        int n=grid[0].size();
        int i=m-1;
        int j=0;
        while(i>=0 && j<n)
        {
            if(grid[i][j]<0)
            {
                cnt += n-j;
                i = i-1;
            }
            else{
                j=j+1;
            }
        }
        return cnt;
    }
};

class Solution {
public:
    int BS(vector<int>&vec)
    {
        int l=0,ans=0;
        int r=vec.size()-1;
        
        while(l<=r)
        {
            int mid = l+(r-l)/2;
            if(vec[mid]<0)
            {
                r=mid-1;
            }
            else{
                l=mid+1;
            }
        
        }
        ans = vec.size()-l;
        return ans;
    }
    int countNegatives(vector<vector<int>>& grid) {
        int total=0;
       for(int i=0;i<grid.size();i++)
       {
           total+=BS(grid[i]);
       }
       return total; 
    }
};
