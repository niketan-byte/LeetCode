/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

// recursive 
// class Solution {
// public:
//     vector<int>res;
//     vector<int> postorderTraversal(TreeNode* root) {
//       if(!root)
//       {
//           return {};
//       }
//         postorderTraversal(root->left);
//         postorderTraversal(root->right);
//         res.push_back(root->val);
        
//         return res;
//     }
// };


// iterative

class Solution {
public:
   
    vector<int> postorderTraversal(TreeNode* root) {
    vector<int>res;
    stack<TreeNode*>s;
    if(!root)
    {
        return res;
    }
        s.push(root);
        while(!s.empty())
        {
            TreeNode* curr = s.top();
           
            res.push_back(curr->val);
             s.pop();
            if(curr->left!=NULL)
            {
                s.push(curr->left);
            }
            if(curr->right!=NULL)
            {
                s.push(curr->right);
            }
        }
       reverse(res.begin(),res.end());
       return res;
    }
};
