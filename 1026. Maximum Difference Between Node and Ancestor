/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxAncestorDiff(TreeNode* root,int mn=100000,int mx=0) {
  if (root == nullptr) return mx - mn;
  mx = max(mx, root->val);
  mn = min(mn, root->val);
  return max(maxAncestorDiff(root->left, mn, mx), maxAncestorDiff(root->right, mn, mx));
    }
};

class Solution {
public:
    int diff=0;
    void differ(TreeNode* root,int mn,int mx){
        if(!root){
            return;
        }
        diff = max(diff,max(abs(root->val-mn),abs(mx-root->val)));
        mn = min(mn,root->val);
        mx = max(mx,root->val);
        differ(root->left,mn,mx);
        differ(root->right,mn,mx);
        
    }
    int maxAncestorDiff(TreeNode* root) {
        if(!root){
            return 0;
        }
        int mn = root->val;
        int mx = root->val;
        differ(root,mn,mx);
        return diff;
    }
};
