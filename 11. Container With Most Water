// class Solution {
// public:
//     int maxArea(vector<int>& height) {
//         int area=0;
//         for(int i=0;i<height.size()-1;i++)
//         {
//             int curr_area=0;
//               int count=1;
//             for(int j=i+1;j<height.size();j++)
//             {
              
//                 curr_area = count*min(height[i],height[j]);
//                 cout<<curr_area<<" "<<area<<"    ";
//                 area = max(curr_area,area);
//                 count++;
//             }
//             cout<<endl;
//         }
//         return area;
//     }
// };


class Solution {
public:
    int maxArea(vector<int>& height) {
    int left=0;
    int right=height.size()-1;
        int ans=0;
        while(left<right)
        {
            ans = max(ans,(right-left)*min(height[left],height[right]));
            if(height[left]<height[right])
            {
                left++;
            }
            else{
                right--;
            }
        }
        return ans;
    }
};
