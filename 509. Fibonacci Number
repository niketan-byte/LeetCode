// class Solution {
// public:
//     int fib(int n) {
//         int a=0;
//         int b=1;
//         int c;
        
//         for(int i=0;i<n-1;i++)
//         {
//             if(n==0)
//             {
//                 c=0;
//             }
//             c=a+b;
//             a=b;
//         b=c;
//         }
//         return c;
//     }
// };


class Solution {
public:
    // void mul(int F[2][2],int M[2][2]);
    // void pow(int F[2][2],int n);
    
    void pow(int F[2][2],int n)
    {
        if(n==0 || n==1)
        {
            return;
        }
        int M[2][2] = {{1,1},{1,0}};
        pow(F,n/2);
        mul(F,F);
        if(n%2!=0)
        {
            mul(F,M);
        }
    }
    
    void mul(int F[2][2],int M[2][2])
    {
        int x = F[0][0]*M[0][0] + F[0][1]*M[1][0];
        int y = F[0][0]*M[0][1] + F[0][1]*M[1][1];
        int z = F[1][0]*M[0][0] + F[1][1]*M[1][0];
        int w = F[1][0]*M[0][1] + F[1][1]*M[1][1];
        
        F[0][0]= x;
        F[0][1]= y;
        F[1][0]= z;
        F[1][1]= w;
        
    }
    int fib(int n) {
    int F[2][2] = {{1,1},{1,0}};
    if(n==0)
    {
        return 0;
    }
        pow(F,n-1);
        return F[0][0];
    }
};
