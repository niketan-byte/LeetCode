class Solution {
public:
    long long int power(long long x, long long int y, long long int p)
{
    long long int res = 1;     // Initialize result
 
    x = x % p; // Update x if it is more than or
                // equal to p
  
    if (x == 0) return 0; // In case x is divisible by p;
 
    while (y > 0)
    {
        // If y is odd, multiply x with result
        if (y & 1)
            res = (res*x) % p;
 
        // y must be even now
        y = y>>1; // y = y/2
        x = (x*x) % p;
    }
    return res;
}
    long long int monkeyMove(long long int n) { 
    long long int ans;
        
     long long int MOD = 1e9+7;
     ans = (MOD+power(2,n,MOD)-2)%MOD;
      
        return ans;
    }
};
