// class Solution {
// public:
//     int minMaxGame(vector<int>& nums) {
//        int n = nums.size();
//        if(n==1)
//        {
//            return nums[0];
//        }
//        int ans;
//         vector<int>newNums;
//       for(int i=0;i<n/2;i++)
//       {
//         if(i%2)
//         {
//             newNums.push_back(max(nums[2*i],nums[2*i+1]));
//         }
//           else{
//                newNums.push_back(min(nums[2*i],nums[2*i+1]));
//           }
//       }
//         ans = minMaxGame(newNums);
//         return ans;
//     }
// };


class Solution {
public:
    int minMaxGame(vector<int>& nums) {
        int n = nums.size();
     
        while(n>1)
        {
            vector<int>temp;
            for(int i=0;i<n/2;i++)
            {
               if(i%2)
        {
            temp.push_back(max(nums[2*i],nums[2*i+1]));
        }
          else{
               temp.push_back(min(nums[2*i],nums[2*i+1]));
          } 
            }
            n /= 2;
            nums = temp;
        }
        return nums[0];
    }
};
