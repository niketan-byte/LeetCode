class Solution {
public:
    int firstMissingPositive(vector<int>& nums) {
//         sort(nums.begin(),nums.end());
//         int ans=1;
//         int count=0;
//         if(nums.size()==1 && nums[0]==1 )
//         {
//             return 2;
//         }
//          if(nums.size()==1 && nums[0]>1 )
//         {
//             return 1;
//         }
//           if(nums.size()==2 && nums[0]<=0 && nums[1]<=0)
//         {
//             return 1;
//         }
//         //   if(nums.size()==2 && nums[0]>0 && nums[1]>0)
//         // {
//         //     return nums[1]+1;
//         // }
//             for(int i=0;i<nums.size();i++)
//             {
//                 if(nums[i]<=0)
//                 {
//                     count++;
//                 }
//             }
//         // cout<<count;
//         for(int i=count+1;i<=nums.size();i++)
//         {
//             if(nums[i]!=i)
//             {
//                 ans=i;
//                 break;
//             }
//         }
//         return ans;
        
        int n=nums.size();
        for(int i=0;i<n;i++)
        {
            if(nums[i]<=0 || nums[i]>n)
            {
                nums[i] = n+1;
            }
        }
        for(int i=0;i<n;i++)
        {
            int num = abs(nums[i]);
          
            if(num>n)
            {
                continue;
            }
             num--;
            if(nums[num]>0)
            {
                nums[num] = -1*nums[num];
            }
        }
        for(int i=0;i<n;i++)
        {
            if(nums[i]>=0)
            {
                return i+1;
            }
        }
      return n+1;
    }
};
