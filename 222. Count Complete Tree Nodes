/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int countNodes(TreeNode* root) {
        // if(root==NULL)
        // {
        //     return 0;
        // }
        // int a = countNodes(root->left);
        // int b = countNodes(root->right);
        // return a+b+1;

        if(root==NULL)
        {
            return 0;
        }
        int l=0,r=0;
        TreeNode *leftN=root,*rightN=root;
        while(leftN!=NULL)
        {
            l++;
            leftN = leftN->left;
        }
        while(rightN!=NULL)
        {
            r++; 
            rightN = rightN->right;
        }
        if(l==r)
        {
            return pow(2,r)-1;
        }
        return countNodes(root->left)+countNodes(root->right)+1;
    }
};
