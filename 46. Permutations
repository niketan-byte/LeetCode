// class Solution {
// public:
//     vector<vector<int>> permute(vector<int>& nums) {
//         sort(nums.begin(),nums.end());
//         vector<vector<int>>ans;
//         vector<int>res;
//         do{
//            for(int i=0;i<nums.size();i++)
//            {
//                res.push_back(nums[i]);
//            }
            
//             ans.push_back(res);
//             res.clear();
//         }while( next_permutation(nums.begin(),nums.end()));
//     return ans;
//     }
    
// };



class Solution {
public:
    vector<vector<int>> permute(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        vector<vector<int>>ans;
  ans.push_back(nums);
        while( next_permutation(nums.begin(),nums.end()))
        {
              ans.push_back(nums);
        }
        return ans;
    }
};


class Solution {
public:
    void solve(vector<int>& nums, vector<vector<int>>&ans, int idx)
    {
        if(idx>=nums.size())
        {
            ans.push_back(nums);
            return;
        }

        for(int i=idx;i<nums.size();i++)
        {
            swap(nums[idx],nums[i]);
            solve(nums,ans,idx+1);
            swap(nums[idx],nums[i]);

        }

    }
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>>ans;
        int idx=0;
        solve(nums,ans,idx);
        return ans;
    }
};
