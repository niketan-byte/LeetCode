class Solution {
public:
    vector<int> successfulPairs(vector<int>& spells, vector<int>& potions, long long success) {
        int n = spells.size();
        int m = potions.size();
        vector<int>vec(n);
        sort(potions.begin(),potions.end());
       
        for(int i=0;i<n;i++){
        int idx=m;
        int low=0;
        int high=m;
        int mid;
        while(low<high)
        {
          mid = low + (high-low)/2;
          long long int product = (long long int)(spells[i])*(long long int)(potions[mid]);
          if(product>=success)
          {
            idx = mid;
            high = mid;
          }
          else{
          low = mid+1;
          }
        }
        vec[i] = m-idx;
        }
        return vec;
    }
};
