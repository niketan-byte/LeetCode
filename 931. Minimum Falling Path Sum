class Solution {
public:
    int minFallingPathSum(vector<vector<int>>& matrix) {
        int n=matrix.size();
        vector<vector<int>> vec(n,vector<int>(n,-1));
        for(int i=0;i<n;i++)
        {
            vec[0][i] = matrix[0][i];
        }
        for(int i=1;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(j==0)
                {
                 vec[i][j]=matrix[i][j] + min(vec[i-1][j],vec[i-1][j+1]);   
                }
                else if(j==n-1)
                {
                   vec[i][j] = matrix[i][j] + min(vec[i-1][j-1],vec[i-1][j]); 
                }
                else{
                  vec[i][j] = matrix[i][j] + min(vec[i-1][j-1],min(vec[i-1][j],vec[i-1][j+1]));  
                }
            }
        }
        int ans=1e9;
        for(int i=0;i<n;i++)
        {
            ans=min(ans,vec[n-1][i]);
        }
        return ans;
    }
};
