// class Solution {
// public:
//     int removeDuplicates(vector<int>& nums) {
//         int c=0;
//         int count=0;
//         for(int i=0;i<nums.size();i=i+c+1)
//         {
//             for(int j=i+1;j<nums.size();j++)
//             {
//                 if(nums[i]==nums[j])
//                 {
//                     count++;
//                     nums[j]=101;
//                 }
//                 else{
//                     c = count;
//                     count=0;
//                     break;
//                 }
//             }
//         }
//         int k;
//         sort(nums.begin(),nums.end());
//         for(int i=0;i<nums.size();i++)
//         {
//            if(nums[i]==101)
//            {
//                k=i;
//                break;
//            }
//         }
// //         for(int i=0;i<nums.size();i++)
// //         {
// //            cout<<nums[i]<<" ";
            
// //         }
//         // cout<<endl<<k;
//         return k;
//     }
// };
class Solution {
public:
    int removeDuplicates(vector<int>& A) {
int count = 0;
int n = A.size();
for(int i = 1; i < n; i++){
    if(A[i] == A[i-1]) count++;
    else A[i-count] = A[i];
}
return n-count;
    }
};
