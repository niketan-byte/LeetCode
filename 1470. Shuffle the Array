class Solution {
public:
    vector<int> shuffle(vector<int>& nums, int n) {
      vector<int>ans;
      int l=0;
      int r=n;
      while(n--)
      {
          ans.push_back(nums[l]);
          ans.push_back(nums[r]);
          l+=1;
          r+=1;
      }
      return ans;
    }
};


// class Solution {
// public:
//     vector<int> shuffle(vector<int>& nums, int n) {
//         vector<int> ans;
//         int i=0,j=n,k=1;
//         int s = nums.size();
//     while(s--)
//         {
        
//             k=1-k;
//             if(k)
//             {
//                 ans.push_back(nums[j]);
//                 j++;
//             }
//             else{
//                 ans.push_back(nums[i]);
//                 i++;
//             }
             
//         }
//         return ans;
//     }
// };


class Solution {
public:
    vector<int> shuffle(vector<int>& nums, int n) {
    vector<int> ans(2*n,0);
        for(int i=0,j=0;i<n;i++,j+=2)
        {
            ans[j]=nums[i];
            ans[j+1]=nums[i+n];
        }
        return ans;
    }
};
